{"ast":null,"code":"var _jsxFileName = \"/Users/lorgioroda/gitHub/technical_challenge/task_management/src/components/Search/Search.tsx\",\n    _s = $RefreshSig$();\n\nimport { Autocomplete, Stack, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useAppState } from \"../../context/AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Search() {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const {\n    requestTasks,\n    tasks\n  } = useAppState();\n\n  const filterTask = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      options: tasks.map(option => option.note),\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        label: \"freeSolo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Search, \"8jbfboh3KpOLdr6O+40pjKjmWjg=\", false, function () {\n  return [useAppState];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["Autocomplete","Stack","TextField","React","useState","useAppState","Search","search","setSearch","requestTasks","tasks","filterTask","map","option","note","params"],"sources":["/Users/lorgioroda/gitHub/technical_challenge/task_management/src/components/Search/Search.tsx"],"sourcesContent":["import { Autocomplete, CardProps, Stack, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { Task } from \"../Models/Tasks\";\nimport { useAppState } from \"../../context/AppContext\";\n\nexport function Search() {\n  const [search, setSearch] = useState(\"\");\n  const { requestTasks, tasks } = useAppState();\n\n  const filterTask = () => {};\n  return <Stack>\n    <Autocomplete\n     options={tasks.map((option) => option.note)}\n     renderInput={(params) => <TextField {...params} label=\"freeSolo\" />}>\n\n    </Autocomplete>\n    </Stack>;\n}\n\nexport default Search;\n"],"mappings":";;;AAAA,SAASA,YAAT,EAAkCC,KAAlC,EAAyCC,SAAzC,QAA0D,eAA1D;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,OAAO,SAASC,MAAT,GAAkB;EAAA;;EACvB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM;IAAEK,YAAF;IAAgBC;EAAhB,IAA0BL,WAAW,EAA3C;;EAEA,MAAMM,UAAU,GAAG,MAAM,CAAE,CAA3B;;EACA,oBAAO,QAAC,KAAD;IAAA,uBACL,QAAC,YAAD;MACC,OAAO,EAAED,KAAK,CAACE,GAAN,CAAWC,MAAD,IAAYA,MAAM,CAACC,IAA7B,CADV;MAEC,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;QAAuB,KAAK,EAAC;MAA7B;QAAA;QAAA;QAAA;MAAA;IAF1B;MAAA;MAAA;MAAA;IAAA;EADK;IAAA;IAAA;IAAA;EAAA,QAAP;AAOD;;GAZeT,M;UAEkBD,W;;;KAFlBC,M;AAchB,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}