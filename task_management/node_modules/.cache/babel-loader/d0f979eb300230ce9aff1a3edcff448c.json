{"ast":null,"code":"var _jsxFileName = \"/Users/lorgioroda/gitHub/technical_challenge/task_management/src/components/Card/Card.tsx\",\n    _s = $RefreshSig$();\n\nimport { deleteTask } from \"../../services/tasks\";\nimport { useAppState } from \"../../context/AppContext\";\nimport { Button, Paper, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Card(props) {\n  _s();\n\n  const [disable, setDisable] = useState(true);\n  const {\n    task\n  } = props;\n  const {\n    requestTasks\n  } = useAppState();\n\n  const handleDelete = taskId => {\n    deleteTask(taskId).then(() => {\n      requestTasks();\n    }).catch(e => console.log(\"error\", e));\n  };\n\n  const handleModal = () => {\n    setDisable(!disable);\n  };\n\n  const onTextfieldChange = event => {\n    setTask({ ...task,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleModal(),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: task.note,\n        disabled: disable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: task.priority,\n        disabled: disable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"7Ib7H9QsCZhH7cG8VfoiRqvl3Rw=\", false, function () {\n  return [useAppState];\n});\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["deleteTask","useAppState","Button","Paper","TextField","useState","Card","props","disable","setDisable","task","requestTasks","handleDelete","taskId","then","catch","e","console","log","handleModal","onTextfieldChange","event","setTask","target","id","value","note","priority"],"sources":["/Users/lorgioroda/gitHub/technical_challenge/task_management/src/components/Card/Card.tsx"],"sourcesContent":["import { deleteTask } from \"../../services/tasks\";\nimport { Task } from \"../Models/Tasks\";\nimport { useAppState } from \"../../context/AppContext\";\nimport { Button, FormControl, Paper, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface CardProps {\n  task: {\n    priority: number;\n    note: string;\n    id: number;\n  };\n  tasks: Task[];\n}\n\nexport function Card(props: CardProps) {\n  const [disable, setDisable] = useState<boolean>(true);\n  const { task } = props;\n  const { requestTasks } = useAppState();\n\n  const handleDelete = (taskId: number) => {\n    deleteTask(taskId)\n      .then(() => {\n        requestTasks();\n      })\n      .catch((e) => console.log(\"error\", e));\n  };\n\n  const handleModal = () => {\n    setDisable(!disable);\n  };\n\n  const onTextfieldChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    \n    setTask({ ...task, [event.target.id]: event.target.value })\n};\n\n  return (\n    <div>\n      <Paper elevation={3}>\n        <div className=\"flex\">\n          <Button onClick={() => handleModal()}>Edit</Button>\n          <Button variant=\"contained\" onClick={() => handleDelete(task.id)}>\n            Delete\n          </Button>\n          <Button>Save</Button>\n        </div>\n        <TextField value={task.note} disabled={disable}></TextField>\n        <TextField value={task.priority} disabled={disable}></TextField>\n      </Paper>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,sBAA3B;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,MAAT,EAA8BC,KAA9B,EAAqCC,SAArC,QAAsD,eAAtD;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAWA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAgC;EAAA;;EACrC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAU,IAAV,CAAtC;EACA,MAAM;IAAEK;EAAF,IAAWH,KAAjB;EACA,MAAM;IAAEI;EAAF,IAAmBV,WAAW,EAApC;;EAEA,MAAMW,YAAY,GAAIC,MAAD,IAAoB;IACvCb,UAAU,CAACa,MAAD,CAAV,CACGC,IADH,CACQ,MAAM;MACVH,YAAY;IACb,CAHH,EAIGI,KAJH,CAIUC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB,CAJhB;EAKD,CAND;;EAQA,MAAMG,WAAW,GAAG,MAAM;IACxBV,UAAU,CAAC,CAACD,OAAF,CAAV;EACD,CAFD;;EAIA,MAAMY,iBAAiB,GAAIC,KAAD,IAAgD;IAExEC,OAAO,CAAC,EAAE,GAAGZ,IAAL;MAAW,CAACW,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;IAA3C,CAAD,CAAP;EACH,CAHC;;EAKA,oBACE;IAAA,uBACE,QAAC,KAAD;MAAO,SAAS,EAAE,CAAlB;MAAA,wBACE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE,QAAC,MAAD;UAAQ,OAAO,EAAE,MAAMN,WAAW,EAAlC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAQ,OAAO,EAAC,WAAhB;UAA4B,OAAO,EAAE,MAAMP,YAAY,CAACF,IAAI,CAACc,EAAN,CAAvD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE,QAAC,MAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,SAAD;QAAW,KAAK,EAAEd,IAAI,CAACgB,IAAvB;QAA6B,QAAQ,EAAElB;MAAvC;QAAA;QAAA;QAAA;MAAA,QARF,eASE,QAAC,SAAD;QAAW,KAAK,EAAEE,IAAI,CAACiB,QAAvB;QAAiC,QAAQ,EAAEnB;MAA3C;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GArCeF,I;UAGWL,W;;;KAHXK,I"},"metadata":{},"sourceType":"module"}